// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ActionResult/Schema/MoveActionResultDef.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mumble.FirstGame.Serialization.Protobuf.ActionResult {

  /// <summary>Holder for reflection information generated from ActionResult/Schema/MoveActionResultDef.proto</summary>
  public static partial class MoveActionResultDefReflection {

    #region Descriptor
    /// <summary>File descriptor for ActionResult/Schema/MoveActionResultDef.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MoveActionResultDefReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1BY3Rpb25SZXN1bHQvU2NoZW1hL01vdmVBY3Rpb25SZXN1bHREZWYucHJv",
            "dG8SDGFjdGlvbnJlc3VsdBodQWN0aW9uL1NjaGVtYS9EaXJlY3Rpb24ucHJv",
            "dG8iiwEKE01vdmVBY3Rpb25SZXN1bHREZWYSCgoCaWQYASABKAUSCQoBeBgC",
            "IAEoAhIJCgF5GAMgASgCEhMKC291dE9mQm91bmRzGAQgASgIEiEKBmZhY2lu",
            "ZxgFIAEoCzIRLmFjdGlvbi5EaXJlY3Rpb24SDAoEb2xkWBgGIAEoAhIMCgRv",
            "bGRZGAcgASgCQjeqAjRNdW1ibGUuRmlyc3RHYW1lLlNlcmlhbGl6YXRpb24u",
            "UHJvdG9idWYuQWN0aW9uUmVzdWx0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mumble.FirstGame.Serialization.Protobuf.Action.DirectionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mumble.FirstGame.Serialization.Protobuf.ActionResult.MoveActionResultDef), global::Mumble.FirstGame.Serialization.Protobuf.ActionResult.MoveActionResultDef.Parser, new[]{ "Id", "X", "Y", "OutOfBounds", "Facing", "OldX", "OldY" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MoveActionResultDef : pb::IMessage<MoveActionResultDef> {
    private static readonly pb::MessageParser<MoveActionResultDef> _parser = new pb::MessageParser<MoveActionResultDef>(() => new MoveActionResultDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveActionResultDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mumble.FirstGame.Serialization.Protobuf.ActionResult.MoveActionResultDefReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveActionResultDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveActionResultDef(MoveActionResultDef other) : this() {
      id_ = other.id_;
      x_ = other.x_;
      y_ = other.y_;
      outOfBounds_ = other.outOfBounds_;
      facing_ = other.facing_ != null ? other.facing_.Clone() : null;
      oldX_ = other.oldX_;
      oldY_ = other.oldY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveActionResultDef Clone() {
      return new MoveActionResultDef(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "outOfBounds" field.</summary>
    public const int OutOfBoundsFieldNumber = 4;
    private bool outOfBounds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OutOfBounds {
      get { return outOfBounds_; }
      set {
        outOfBounds_ = value;
      }
    }

    /// <summary>Field number for the "facing" field.</summary>
    public const int FacingFieldNumber = 5;
    private global::Mumble.FirstGame.Serialization.Protobuf.Action.Direction facing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mumble.FirstGame.Serialization.Protobuf.Action.Direction Facing {
      get { return facing_; }
      set {
        facing_ = value;
      }
    }

    /// <summary>Field number for the "oldX" field.</summary>
    public const int OldXFieldNumber = 6;
    private float oldX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OldX {
      get { return oldX_; }
      set {
        oldX_ = value;
      }
    }

    /// <summary>Field number for the "oldY" field.</summary>
    public const int OldYFieldNumber = 7;
    private float oldY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OldY {
      get { return oldY_; }
      set {
        oldY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveActionResultDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveActionResultDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (OutOfBounds != other.OutOfBounds) return false;
      if (!object.Equals(Facing, other.Facing)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OldX, other.OldX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OldY, other.OldY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (OutOfBounds != false) hash ^= OutOfBounds.GetHashCode();
      if (facing_ != null) hash ^= Facing.GetHashCode();
      if (OldX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OldX);
      if (OldY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OldY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (OutOfBounds != false) {
        output.WriteRawTag(32);
        output.WriteBool(OutOfBounds);
      }
      if (facing_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Facing);
      }
      if (OldX != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(OldX);
      }
      if (OldY != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(OldY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (OutOfBounds != false) {
        size += 1 + 1;
      }
      if (facing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Facing);
      }
      if (OldX != 0F) {
        size += 1 + 4;
      }
      if (OldY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveActionResultDef other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.OutOfBounds != false) {
        OutOfBounds = other.OutOfBounds;
      }
      if (other.facing_ != null) {
        if (facing_ == null) {
          Facing = new global::Mumble.FirstGame.Serialization.Protobuf.Action.Direction();
        }
        Facing.MergeFrom(other.Facing);
      }
      if (other.OldX != 0F) {
        OldX = other.OldX;
      }
      if (other.OldY != 0F) {
        OldY = other.OldY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 32: {
            OutOfBounds = input.ReadBool();
            break;
          }
          case 42: {
            if (facing_ == null) {
              Facing = new global::Mumble.FirstGame.Serialization.Protobuf.Action.Direction();
            }
            input.ReadMessage(Facing);
            break;
          }
          case 53: {
            OldX = input.ReadFloat();
            break;
          }
          case 61: {
            OldY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
